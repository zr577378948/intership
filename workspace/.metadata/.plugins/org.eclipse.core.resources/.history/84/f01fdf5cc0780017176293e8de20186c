package com.ouya.zr;

import java.util.Arrays;

/*
 * 泛型:在建立对象时不指定对象类的属性，而是在实例化对象由外部对象设定，泛型可以提高数据安全性
 * 原理：声明类时通过标识符表示类中的某个属性类型，或某方法的返回值及参考类型。
 * 实例化类时只要指定需要类型即可
 * 
 * 
 * 泛型对象定义是应用最广泛和普遍的
 * 
 * 
 * 泛型对象定义方法：
 * 商店<电脑> 对象名称 = new 商店<电脑>();
 * 
 */
public class Shop {

}

class Store<E>{
	private E[] room;
	private int[] num;
	public Store() {
		super();
	}
	public Store(E[] room, int[] num) {
		this.room = room;
		this.num = num;
	}
	public E[] getRoom() {
		return room;
	}
	public void setRoom(E[] room) {
		this.room = room;
	}
	public int[] getNum() {
		return num;
	}
	public void setNum(int[] num) {
		this.num = num;
	}
	@Override
	public String toString() {
		return "Store [room=" + room + ", num=" + num + "]";
	}
	public void show(){
		for (E b:room) {
			System.out.println(b);
		}
	}
	
}