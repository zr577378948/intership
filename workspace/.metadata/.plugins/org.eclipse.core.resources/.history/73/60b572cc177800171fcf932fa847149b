package com.zr.ouya.buffer;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.junit.Test;

public class TestBuffer {
	
//使用BUffefedInputStream和BufferOutPutStream实现非文本文件的复制
	
	@Test
	public void testBufferedInputStreamOutputStream(){
		
		//将创建的节点流的对象作为参数传递给缓冲刘的构造器中
		BufferedInputStream  bs = null;
		BufferedOutputStream  bs1 = null;
		try {
			//1.提供读入写出的文件
			File f = new File("e:"+File.separatorChar+"hello.txt");
			File f1 = new File("e:"+File.separatorChar+"hello1.txt");
			//2.创建相应的节点流FileInputStream、FileOutputStream
			FileInputStream fs = new FileInputStream(f);
			FileOutputStream fs1 = new FileOutputStream(f1);
			
			bs = new BufferedInputStream(fs);
			bs1 = new BufferedOutputStream(fs1);
			
			byte []b = new byte[1024];
			
			int len;
			while((len=bs.read(b))!=-1){
			
				bs1.write(b, 0, len);
			}
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally{
				if(bs1!=null){
					try {
						bs1.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				if(bs!=null){
					try {
						bs.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		
	}
}
