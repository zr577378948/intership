package com.ouya.zr.file;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.junit.Test;

public class TestCopy {
	public static void main(String[] args) {
		
	}

}
@Test
public void FileInputOutOutStream(){
	File f = new File("e:"+File.separator+"hello2.txt");
	File f1 = new File("e:"+File.separator+"hello3.txt");
	FileInputStream fs = null;
	FileOutputStream fs1 = null;
	
	try {
		
		fs = new FileInputStream(f);
		fs1 = new FileOutputStream(f1);
		
		byte[] b = new byte[20];
		int len;
		while((len=fs.read(b))!=-1){
			fs1.write(b, 0, len);
		}
		
	} catch (Exception e) {
		e.printStackTrace();
	}finally{
		if(fs!=null){
		 	try {
				fs.close();
			} catch (IOException e) {
				e.printStackTrace();
			}finally{
				if(fs1!=null){
		 	try {
				fs1.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
			}
		}
		
	}
}

/*
 * FileOutputStream写字节
 */
public void FileOutputStream(){
	//创建一个File对象，表明要写入的位置
	//输出的物理文件卡可以不存在，若不存在，可以自动创建；若存在，会将原有的文件覆盖
	File f = new File("e:"+File.separator+"hello1.txt");
	//创建一个FileOutputStream对象，将f的对象作为形参传递给FileOutputStream构造器中
	FileOutputStream fs = null;
	try {
		fs = new FileOutputStream(f);
		//写入的操作
		fs.write(new String("hellohaha").getBytes());
	} catch (Exception e) {
		e.printStackTrace();
	}finally{
		//关闭流
		if(fs!=null){
			try {
				fs.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}
